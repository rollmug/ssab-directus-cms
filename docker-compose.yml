version: '3'

services:

  mysql_ssab:
    container_name: mysql_ssab
    image: mysql:8
    restart: always
    healthcheck: 
      test: ['CMD', 'mysqladmin', 'ping', '--silent']
      interval: 5s
      timeout: 20s
      retries: 3
      start_period: 5s
    networks: 
      - directus_ssab
    ports:
      - 3306:3306
    volumes:
      - ./mysql:/var/lib/mysql
      - ./init:/docker-entrypoint-initdb.d
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASS}
      MYSQL_DATABASE: ${MYSQL_DB}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASS}

  adminer_ssab:
    container_name: adminer_ssab
    image: adminer:latest
    restart: always
    depends_on:
      - mysql_ssab
    networks: 
      - directus_ssab
    environment:
      ADMINER_DEFAULT_SERVER: mysql_ssab
    ports:
      - 8080:8080

  cache_ssab:
    container_name: cache_ssab
    image: redis:6
    networks:
      - directus_ssab

  directus_ssab:
    container_name: directus_ssab
    image: directus/directus:10.0.0
    restart: always
    ports:
      - ${DIRECTUS_PORT}:8055
    volumes:
      - ./directus/uploads:/directus/uploads
      - ./snapshots:/directus/snapshots
      - ./ssab-theme/dist:/directus/extensions/endpoints/ssab-theme
    networks:
      - directus_ssab
    depends_on:
      - cache_ssab
      - mysql_ssab
    environment:
      KEY: '255d861b-5ea1-5996-9aa3-922530ec40b1'
      SECRET: '6116487b-cda1-52c2-b5b5-c8022c45e263'
      DB_CLIENT: 'mysql'
      DB_HOST: 'mysql_ssab'
      DB_USER: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASS}
      DB_DATABASE: ${MYSQL_DB}
      DB_PORT: '3306'

      CACHE_ENABLED: 'true'
      CACHE_STORE: 'redis'
      CACHE_REDIS: 'redis://cache_ssab:6379'
      CACHE_AUTO_PURGE: 'true'
      CACHE_SYSTEM_TTL: '2m'
      CACHE_SCHEMA: 'false'
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      CORS_ENABLED: 'true'
      CORS_ORIGIN: 'true'
      EXTENSIONS_AUTO_RELOAD: 'true'
      PUBLIC_URL: ${PUBLIC_URL}

      IMG_API_URL: ${IMG_API_URL}
      SSAB_CLIENT_URL: ${SSAB_CLIENT_URL}
      SSAB_CLIENT_ID: ${SSAB_CLIENT_ID}
      SSAB_CLIENT_SECRET: ${SSAB_CLIENT_SECRET}
      SSAB_CLIENT_IDENTIFIER: ${SSAB_CLIENT_IDENTIFIER}
      SSAB_IMG_URL_BASE: ${SSAB_IMG_URL_BASE}

  imagemagick:
    container_name: imagemagick
    image: davekobrenski/imagemagick-node:0.1.6
    restart: always
    environment:
      NODE_ENV: production
      SERVICE_URL: ${IM_SERVICE_URL}
      PORT: ${IM_PORT}
      CACHE_DIR: ${IM_CACHE_DIR}
      ENABLE_AUTH: ${IM_ENABLE_AUTH}
      AUTH_IDENTIFIER: ${IM_AUTH_IDENTIFIER}
      AUTH_BASE_URL: ${IM_AUTH_BASE_URL}
    ports:
      - ${IM_PORT}:5100
    volumes:
      - ./public:/im/app/public
    networks:
      - directus_ssab

  graphiql_ssab:
    container_name: graphiql_ssab
    image: plutoz/graphiql
    depends_on:
      - directus_ssab
    ports:
      - 4000:4000
    environment:
      API_ENDPOINT: ${API_ENDPOINT}
    networks:
      - directus_ssab

  cloudflared:
    container_name: cloudflared
    image: cloudflare/cloudflared:latest
    volumes:
      - ${CF_CERT_SERVER_DIR}:/etc/.cloudflared
    restart: unless-stopped
    command: tunnel run
    environment:
      - TUNNEL_TOKEN=${TUNNEL_TOKEN}
      - TUNNEL_ORIGIN_CERT=/etc/.cloudflared/cert.pem
    networks:
      - directus_ssab

networks:
  directus_ssab:
    driver: bridge